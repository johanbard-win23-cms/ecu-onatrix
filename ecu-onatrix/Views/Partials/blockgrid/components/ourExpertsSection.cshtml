@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var sectionLabel = Model?.Content.Value<string>("sectionLabel");
    var sectionTitle = Model?.Content.Value<string>("sectionTitle");
    var expertRows = Model?.Content.Value<IEnumerable<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>>("expertRows") ?? null;
}

<section class="experts">
    <div class="w-full d-flex center container">
        <div class="w-max d-flex column center box">
            <div class="label capitalize">@sectionLabel</div>
            <h2 class="w-half">@sectionTitle</h2>
            
            @* @await Html.GetBlockGridHtmlAsync(Model.Content.Value<Umbraco.Cms.Core.Models.Blocks.BlockGridModel>("expertRows"), "expertRows"); *@
            @* @await Html.GetBlockGridItemAreasHtmlAsync(Model) *@

            <div>@expertRows</div>

            @foreach (var row in expertRows)
            {
                <div>@(row.Content.Value<IEnumerable<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>>("expertCards"))</div>
                @* @await Html.GetBlockGridHtmlAsync(row.Content.Value<IEnumerable<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>>("expertCards"), "expertCards"); *@
                @* @await Html.GetBlockGridItemAreasHtmlAsync(row.Content.Value<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>("expertCards")) *@
            }
           
            
            
        </div>
    </div>
</section>


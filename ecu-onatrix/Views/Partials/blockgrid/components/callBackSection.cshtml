@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var sectionLabel = Model?.Content.Value<string>("sectionLabel");
    var sectionTitle = Model?.Content.Value<string>("sectionTitle");
    var sectionText = Model?.Content.Value<string>("sectionText");
    var sectionBackgroundImage = Model?.Content.Value<IPublishedContent>("sectionBackgroundImage")?.Url();
}

@Html.AntiForgeryToken()

<section class="map-contact-us white">
    <div class="w-full container">
        <div class="w-full map-overlay"><img src="/media/static-images/map.svg" alt="" class="map"></div>
        <div class="w-max d-flex column center box">
            <div class="label capitalize">@sectionLabel</div>
            <form novalidate class="form contact">
                <fieldset class="d-flex column center">
                    <legend class="h2 w-half">@sectionTitle</legend>
                    <div class="text italic w-half">@sectionText</div>
                    <div class="inputs">
                        @if (TempData["success"] == null)
                        {
                            <div class="input-box">
                                <label for="name">
                                    <input type="text" id="name" name="name" value="" placeholder="Name" required>
                                    <span></span>
                                </label>
                                <label for="email">
                                    <input type="text" id="email" name="email" value="" placeholder="Email address" required>
                                    <span></span>
                                </label>
                            </div>
                            <div class="input-box">
                                <label for="phone">
                                    <input type="text" id="phone" name="phone" value="" placeholder="Phone" required>
                                    <span></span>
                                </label>
                                <label for="contact-target">
                                    <div class="select-box">
                                    <select name="contact-target" id="contact-target">
                                        <option value="Financial consulting">Financial consulting</option>
                                        <option value="Exports consulting">Exports consulting</option>
                                        <option value="Emotional consulting">Emotional consulting</option>
                                    </select>
                                    <i class="fa-solid fa-chevron-down"></i>
                                    </div>
                                </label>
                            </div>
                            <input class="btn-theme" type="submit" value="Submit">
                        }
                        else
                        {
                            if ((bool)TempData["success"]!)
                            {
                                <div class="text status-message shake">@TempData["status_message"]</div>
                            }
                            else
                            {
                                <div class="text status-message shake error">@TempData["status_message"]</div>
                            }
                        }
                    </div>
                </fieldset>
            </form>
        </div>
    </div>
</section>

<script defer src="/scripts/forms.js"></script>
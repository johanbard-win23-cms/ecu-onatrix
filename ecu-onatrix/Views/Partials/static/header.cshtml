@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions

@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper;
@{
    var selection = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray();

    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "siteSettings") ?? null;

    var officeAddress = settings?.Value<string>("officeAddress") ?? null;
    var officePostalCodeCity = settings?.Value<string>("officePostalCodeCity") ?? null;
    var siteLogoUrl = settings?.Value<IPublishedContent>("siteLogo")?.Url() ?? null;
    var topBarText = settings?.Value<string>("topBarText") ?? null;
    var topBarHtml = String.IsNullOrEmpty(topBarText) ? new HtmlString($"{officeAddress}, {officePostalCodeCity}") : new HtmlString($"{topBarText}");

    var facebookUrl = settings?.Value<string>("facebookUrl") ?? null;
    var xUrl = settings?.Value<string>("xUrl") ?? null;
    var linkedInUrl = settings?.Value<string>("linkedInUrl") ?? null;
}

<header>
    <div class="container w-full d-flex column">
        <div class="w-full d-flex center top">
            <div class="content-box w-max d-flex center space-between">
                <div class="address-box note-1">@topBarHtml</div>
                <div class="d-flex center social-box">
                    <a href="@facebookUrl" target="_blank" class="btn-social"><i class="fa-brands fa-facebook-f"></i></a>
                    <a href="@xUrl" class="btn-social"><i class="fa-brands fa-x-twitter"></i></a>
                    <a href="@linkedInUrl" class="btn-social"><i class="fa-brands fa-linkedin-in"></i></a>
                </div>
            </div>    
        </div>
        <div class="w-full d-flex center bottom">
            <div class="content-box w-max d-flex center space-between">
                <a href="/home"><img src="@siteLogoUrl" alt="Logo" class="logo"></a>
                <nav>
                    @if (selection?.Length > 0)
                    {
                        @foreach (var item in selection)
                        {
                            @if (item.IsAncestorOrSelf(Model)) {<div class="nav-item current">@item.Name</div> }
                            else { <a class="nav-item" href="@item.Url(PublishedUrlProvider)">@item.Name</a> }
                            
                        }
                    }
                </nav>
                <button class="search"><i class="fa-solid fa-magnifying-glass"></i></button>
            </div>
        </div>
    </div>
</header>